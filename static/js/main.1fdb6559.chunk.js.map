{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","completedTodos","title","handleChange","event","target","name","value","setState","shuffle","result","sort","Math","floor","random","forceUpdate","preparedTodoList","todos","this","props","filter","todo","completed","className","placeholder","onChange","type","onClick","includes","map","key","id","classNames","checked","readOnly","disabled","userId","selectedUserId","onSelectUser","React","Component","request","url","fetch","then","responce","ok","Error","status","statusText","json","data","getTodos","CurrentUser","user","loadData","prevProps","a","email","phone","clearSelectedUser","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1fdb6559.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport class TodoList extends React.Component {\n  state = {\n    completedTodos: 'All',\n    title: '',\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  shuffle = (result) => {\n    result.sort(() => Math.floor(Math.random() * 100) - 30);\n    this.forceUpdate();\n  }\n\n  render() {\n    const { todos } = this.props;\n    const { title, completedTodos } = this.state;\n    let preparedTodoList;\n\n    switch (completedTodos) {\n      case 'All':\n        preparedTodoList = todos;\n        break;\n      case 'Completed':\n        preparedTodoList = todos.filter(todo => todo.completed === true);\n        break;\n      case 'Active':\n        preparedTodoList = todos.filter(todo => todo.completed === false);\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <input\n          name=\"title\"\n          placeholder=\"Enter todo title\"\n          value={title}\n          onChange={this.handleChange}\n        />\n        <select\n          value={completedTodos}\n          name=\"completedTodos\"\n          onChange={this.handleChange}\n        >\n          <option>All</option>\n          <option>Completed</option>\n          <option>Active</option>\n        </select>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => this.shuffle(todos)}\n        >\n          Randomize\n        </button>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {preparedTodoList\n              .filter(todo => todo.title\n                && (todo.title).includes(title))\n              .map(todo => (\n                <li\n                  key={todo.id}\n                  className={classNames('TodoList__item', {\n                    'TodoList__item--checked': todo.completed,\n                    'TodoList__item--unchecked': !todo.completed,\n                  })\n                  }\n                >\n                  <label>\n                    {todo.completed ? (\n                      <input type=\"checkbox\" checked readOnly />\n                    ) : (\n                      <input type=\"checkbox\" disabled />\n                    )}\n\n                    <p>{todo.title}</p>\n                  </label>\n                  <button\n                    className={classNames('button TodoList__user-button', {\n                      // eslint-disable-next-line\n                      'TodoList__user-button--selected': todo.userId === this.props.selectedUserId,\n                    })}\n                    type=\"button\"\n                    onClick={() => {\n                      this.props.onSelectUser(todo.userId);\n                    }}\n                  >\n                    User #\n                    {todo.userId}\n                  </button>\n                </li>\n              ))}\n\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n  onSelectUser: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","const API_URL = `https://mate-api.herokuapp.com/`;\n\nconst request = url => fetch(`${API_URL}${url}`)\n  .then((responce) => {\n    if (!responce.ok) {\n      throw new Error(`${responce.status} - ${responce.statusText}`);\n    }\n\n    return responce.json();\n  })\n  .then(result => result.data);\n\nexport const getTodos = () => request('./todos');\nexport const getUser = userId => request(`./users/${userId}`);\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const user = await getUser(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { id, name, email, phone } = this.state.user;\n\n    return (\n      <div className=\"currentUser\">\n        <h2 className=\"currentUser__title\">\n          <span>\n            {`Selectet user: ${id}`}\n          </span>\n        </h2>\n\n        <h3 className=\"currentUser__name\">{name}</h3>\n        <p className=\"currentUser__email\">{email}</p>\n        <p className=\"currentUser__phone\">{phone}</p>\n\n        <button\n          type=\"button\"\n          className=\"currentUser__clearButton\"\n          onClick={this.props.clearSelectedUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearSelectedUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData = async() => {\n    // eslint-disable-next-line\n    const todos = await getTodos(this.props.userId);\n\n    this.setState({ todos });\n  }\n\n  onSelectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearSelectedUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            onSelectUser={this.onSelectUser}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearSelectedUser={this.clearSelectedUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}